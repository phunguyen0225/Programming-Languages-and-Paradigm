Please keep all files related to a homework or an assignment within the appropriate directory. Files checked in outside of specific homework or assignment directory will not be reviewed or graded for that homework/assignment.

Check in and modify files as many times as you like. You will not be able to modify the files after the deadline.

You will work as a pair, both of you are responsible for the completed work in all assignments and homework. Reasonable effort is expected from each person. If you do not check in, you will not receive any scores. When pairing please switch who checks in so there is significant number of check in from each of you.

The deadlines are strict, there will be no extensions. Don't email any code to Venkat or to the mailing list. Your last check in before the deadline will be graded. If your last check in breaks the code, both you and your pair will lose significant points.

Please feel free to ask for frequent reviews. See the reviews/readme.txt file for details on how to ask for reviews.

You can evolve the answers and solutions based on the reviews. Only the latest checkin at the time of review will be looked at. Also the final check in will be the only one graded.

You are still responsible to successfully complete an homework or assignment even if your pair is a no-show. You can request to change pairs at any time and if there is another person in the class willing to pair with you we can make the switch.

A lot of help will be provided in this course, but you have to start early and ask for help along the way.                                                                      

Please read the academic honesty policy posted on the course mailing list.                   

The above details apply to all homework and assignments in this course.                   

Now to homework #1.
==============================================================================
HW1: Due 11:59PM CT September 9

1. Give some examples of languages that are statically typed?

    C, C++, C# , Java, Rust, Typescript, Go, Scala

2. Give some examples of languages that are dynamically typed?

    Python, Javascript, Ruby, Groovy, Perl, Erlang, PHP

3. Give examples of languages that provide support for both.

    C#, it has support for the "dynamic" type which avoids compile time checking and is typed at run time, although this is expensive
    Javascript, it is a super set of Typescript thus it supports dynamic and static typing

4.
"A statically typed language verifies the type of variables and objects at compile time. In order for this to work, when programming in a statically typed language, we have to specify the type for each variable."

Discuss in favor or against the above statement. Give examples.
    Thien's arguement against:
    I reject the last part of this statement, that type for each variable need to be specified for the compiler to type it at compile time.
    A lot of static languages such as C# and C++ offer compile time type deduction mechanisms (generics and templating) that allow types to be deduced at compile time rather than explicitly specified pre-compile time. These tools leverage design by capability principles instead of being tied to a contract
    that typical OOP-obsessed static languages follow. The template.cpp file demonstrates using templates that as long as the object is capable of performing the action, it would perform it. The type is then deduced at compile time without us needing to specify the type it actually is. This type comes in very handy for achieving polymorphism, allowing us to reuse functions and classes. The C++ STL is a great example of it in use as it is written entirely with templates,
    a completely compile time type deduced library.
    


